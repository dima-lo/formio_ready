declare const DynamicWizard_base: any;
export default class DynamicWizard extends DynamicWizard_base {
    static schema(...extend: any[]): any;
    static get builderInfo(): object;
    static get defaultHeaderTemplate(): string;
    static get defaultRowTemplate(): string;
    get dynamicWizardKey(): string;
    get rowRef(): string;
    get rowElements(): any;
    get agreeButtonRef(): string;
    get denyButtonRef(): string;
    get agreeButtonElements(): any;
    get denyButtonElements(): any;
    get cancelRowRef(): string;
    get cancelRowElements(): any;
    get inlineEditMode(): any;
    get saveEditMode(): boolean;
    get buttons(): {};
    constructor(...args: any[]);
    init(): any;
    render(children: any): any;
    attach(element: HTMLElement): any;
    attachNav(): void;
    attachComponents(element: any, components: any, container?: any): any;
    isOpen(editRow: any): boolean;
    addRow(): any;
    cancelRow(): void;
    returnPrevPageState(): void;
    saveRow(): boolean;
    editRow(rowIndex: any): any;
    removeRow(rowIndex: any): void;
    renderRow(row: any, rowIndex: any): any;
    hasButton(name: any, nextPage?: boolean): any;
    getNextPage(): boolean;
    prevPage(): void;
    nextPage(): any;
    toggleChangingMode(): void;
}
export {};
