declare const _default: ({
    type: string;
    input: boolean;
    weight: number;
    tooltip: string;
    key: string;
    defaultValue: string;
    label: string;
    dataSrc: string;
    data: {
        values: {
            label: string;
            value: string;
        }[];
    };
    conditional?: undefined;
    forceOverride?: undefined;
    valueProperty?: undefined;
    skipMerge?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    placeholder?: undefined;
    clearOnHide?: undefined;
    template?: undefined;
    components?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    input: boolean;
    weight: number;
    key: string;
    label: string;
    defaultValue: boolean;
    tooltip: string;
    conditional: {
        json: {
            in: (string[] | {
                var: string;
            })[];
            and?: undefined;
            '==='?: undefined;
        };
    };
    dataSrc?: undefined;
    data?: undefined;
    forceOverride?: undefined;
    valueProperty?: undefined;
    skipMerge?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    placeholder?: undefined;
    clearOnHide?: undefined;
    template?: undefined;
    components?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    weight: number;
    input: boolean;
    key: string;
    label: string;
    forceOverride: boolean;
    tooltip: string;
    conditional: {
        json: {
            and: ({
                in: (string[] | {
                    var: string;
                })[];
                '!=='?: undefined;
            } | {
                '!==': (boolean | {
                    var: string;
                })[];
                in?: undefined;
            })[];
            in?: undefined;
            '==='?: undefined;
        };
    };
    defaultValue?: undefined;
    dataSrc?: undefined;
    data?: undefined;
    valueProperty?: undefined;
    skipMerge?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    placeholder?: undefined;
    clearOnHide?: undefined;
    template?: undefined;
    components?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    input: boolean;
    key: string;
    label: string;
    weight: number;
    tooltip: string;
    dataSrc: string;
    valueProperty: string;
    skipMerge: boolean;
    data: {
        custom(context: any): any;
        values?: undefined;
    };
    conditional: {
        json: {
            '===': (boolean | {
                var: string;
            })[];
            in?: undefined;
            and?: undefined;
        };
    };
    defaultValue?: undefined;
    forceOverride?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    placeholder?: undefined;
    clearOnHide?: undefined;
    template?: undefined;
    components?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    input: boolean;
    key: string;
    label: string;
    refreshOn: string;
    clearOnRefresh: boolean;
    weight: number;
    tooltip: string;
    dataSrc: string;
    valueProperty: string;
    skipMerge: boolean;
    data: {
        custom(context: any): any[] | Promise<unknown>;
        values?: undefined;
    };
    conditional: {
        json: {
            '===': (boolean | {
                var: string;
            })[];
            in?: undefined;
            and?: undefined;
        };
    };
    defaultValue?: undefined;
    forceOverride?: undefined;
    placeholder?: undefined;
    clearOnHide?: undefined;
    template?: undefined;
    components?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    input: boolean;
    key: string;
    weight: number;
    label: string;
    placeholder: string;
    tooltip: string;
    clearOnHide: boolean;
    conditional: {
        json: {
            '===': (string | {
                var: string;
            })[];
            in?: undefined;
            and?: undefined;
        };
    };
    defaultValue?: undefined;
    dataSrc?: undefined;
    data?: undefined;
    forceOverride?: undefined;
    valueProperty?: undefined;
    skipMerge?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    template?: undefined;
    components?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    input: boolean;
    label: string;
    key: string;
    clearOnHide: boolean;
    tooltip: string;
    defaultValue: string;
    weight: number;
    template: string;
    dataSrc: string;
    data: {
        values: {
            label: string;
            value: string;
        }[];
    };
    conditional: {
        json: {
            '===': (string | {
                var: string;
            })[];
            in?: undefined;
            and?: undefined;
        };
    };
    forceOverride?: undefined;
    valueProperty?: undefined;
    skipMerge?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    placeholder?: undefined;
    components?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    input: boolean;
    label: string;
    key: string;
    tooltip: string;
    weight: number;
    components: {
        label: string;
        key: string;
        input: boolean;
        type: string;
    }[];
    clearOnHide: boolean;
    conditional: {
        json: {
            '===': (string | {
                var: string;
            })[];
            in?: undefined;
            and?: undefined;
        };
    };
    defaultValue?: undefined;
    dataSrc?: undefined;
    data?: undefined;
    forceOverride?: undefined;
    valueProperty?: undefined;
    skipMerge?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    placeholder?: undefined;
    template?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    input: boolean;
    key: string;
    label: string;
    tooltip: string;
    clearOnHide: boolean;
    conditional: {
        json: {
            '===': (string | {
                var: string;
            })[];
            in?: undefined;
            and?: undefined;
        };
    };
    weight?: undefined;
    defaultValue?: undefined;
    dataSrc?: undefined;
    data?: undefined;
    forceOverride?: undefined;
    valueProperty?: undefined;
    skipMerge?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    placeholder?: undefined;
    template?: undefined;
    components?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    input: boolean;
    weight: number;
    key: string;
    label: string;
    tooltip: string;
    clearOnHide: boolean;
    conditional: {
        json: {
            '===': (string | {
                var: string;
            })[];
            in?: undefined;
            and?: undefined;
        };
    };
    defaultValue?: undefined;
    dataSrc?: undefined;
    data?: undefined;
    forceOverride?: undefined;
    valueProperty?: undefined;
    skipMerge?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    placeholder?: undefined;
    template?: undefined;
    components?: undefined;
    title?: undefined;
    theme?: undefined;
    collapsible?: undefined;
    collapsed?: undefined;
} | {
    type: string;
    title: string;
    theme: string;
    collapsible: boolean;
    collapsed: boolean;
    key: string;
    weight: number;
    tooltip: string;
    conditional: {
        json: {
            and: {
                '===': (string | {
                    var: string;
                })[];
            }[];
            in?: undefined;
            '==='?: undefined;
        };
    };
    components: ({
        type: string;
        tag: string;
        content: string;
        key?: undefined;
        rows?: undefined;
        editor?: undefined;
        hideLabel?: undefined;
        input?: undefined;
        placeholder?: undefined;
    } | {
        type: string;
        key: string;
        rows: number;
        editor: string;
        hideLabel: boolean;
        input: boolean;
        placeholder: string;
        tag?: undefined;
        content?: undefined;
    })[];
    input?: undefined;
    defaultValue?: undefined;
    label?: undefined;
    dataSrc?: undefined;
    data?: undefined;
    forceOverride?: undefined;
    valueProperty?: undefined;
    skipMerge?: undefined;
    refreshOn?: undefined;
    clearOnRefresh?: undefined;
    placeholder?: undefined;
    clearOnHide?: undefined;
    template?: undefined;
})[];
export default _default;
