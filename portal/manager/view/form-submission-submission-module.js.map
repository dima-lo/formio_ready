{"version":3,"sources":["webpack:///./src/app/form/submission/grid/body/body.component.html","webpack:///./src/app/form/submission/grid/submission-grid.component.html","webpack:///./src/app/form/submission/index/index.component.html","webpack:///./src/app/form/submission/resource/resource.component.html","webpack:///./src/app/form/submission/SubmissionResourceConfig.ts","webpack:///./src/app/form/submission/SubmissionService.ts","webpack:///./src/app/form/submission/grid/body/body.component.ts","webpack:///./src/app/form/submission/grid/submission-grid.component.ts","webpack:///./src/app/form/submission/index/index.component.ts","webpack:///./src/app/form/submission/resource/resource.component.scss","webpack:///./src/app/form/submission/resource/resource.component.ts","webpack:///./src/app/form/submission/submission.module.ts"],"names":[],"mappings":"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","file":"form-submission-submission-module.js","sourcesContent":["module.exports = \"<ng-template>\\n  <tbody>\\n  <tr *ngFor=\\\"let row of rows\\\" [className]=\\\"tableClass(row)\\\" (click)=\\\"onRowSelect($event, row)\\\">\\n    <td *ngFor=\\\"let rowHeader of header.headers\\\" [innerHTML]=\\\"view(row, rowHeader)\\\"></td>\\n  </tr>\\n  </tbody>\\n</ng-template>\\n\"","module.exports = \"<ng-template #headerTemplate></ng-template>\\n<ng-template #bodyTemplate></ng-template>\\n<ng-template #footerTemplate></ng-template>\\n<div class=\\\"card card-body bg-light\\\" *ngIf=\\\"!offlineService.isOnline\\\">\\n  <table class=\\\"table mb-0\\\">\\n    <tr>\\n      <td class=\\\"table-success text-center\\\">Added Offline</td>\\n      <td class=\\\"table-warning text-center\\\">Changed Offline</td>\\n      <td class=\\\"table-danger text-center\\\">Deleted Offline</td>\\n    </tr>\\n  </table>\\n</div>\\n<div class=\\\"formio-grid\\\">\\n  <formio-alerts [alerts]=\\\"alerts\\\"></formio-alerts>\\n  <table class=\\\"table table-bordered table-striped table-hover\\\">\\n    <ng-container *ngIf=\\\"initialized\\\" [ngTemplateOutlet]=\\\"header.template\\\"></ng-container>\\n    <formio-loader></formio-loader>\\n    <ng-container *ngIf=\\\"initialized\\\" [ngTemplateOutlet]=\\\"body.template\\\"></ng-container>\\n    <ng-container *ngIf=\\\"initialized\\\" [ngTemplateOutlet]=\\\"footer.template\\\"></ng-container>\\n  </table>\\n</div>\\n<button *ngIf=\\\"!offlineService.isOnline\\\" class=\\\"btn btn-light\\\" type=\\\"button\\\" (click)=\\\"clearOfflineSubmissions()\\\">\\n  <i class=\\\"fa fa-trash mr-3\\\"></i> Clear Offline Submissions\\n</button>\\n\"","module.exports = \"<offline-submission-grid\\n  [src]=\\\"gridSrc\\\"\\n  [query]=\\\"gridQuery\\\"\\n  [onForm]=\\\"service.formLoaded\\\"\\n  (rowSelect)=\\\"onSelect($event)\\\"\\n  (error)=\\\"service.onError($event)\\\"\\n  (createItem)=\\\"onCreateItem()\\\"\\n  createText=\\\"\\\"\\n></offline-submission-grid>\\n\"","module.exports = \"<a *ngIf=\\\"downloadUrl\\\" [href]=\\\"downloadUrl\\\" target=\\\"_blank\\\" class=\\\"pull-right\\\"><img src=\\\"assets/pdf.png\\\" style=\\\"height: 2em;\\\" /></a>\\n<ul class=\\\"nav nav-tabs mb-2\\\">\\n  <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" *ngIf=\\\"!auth.authenticated\\\" routerLink=\\\"../../\\\"><i class=\\\"fa fa-chevron-left glyphicon glyphicon-chevron-left\\\"></i></a></li>\\n  <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" *ngIf=\\\"auth.authenticated\\\" routerLink=\\\"../\\\"><i class=\\\"fa fa-chevron-left glyphicon glyphicon-chevron-left\\\"></i></a></li>\\n  <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link\\\" routerLink=\\\"view\\\" routerLinkActive=\\\"active\\\">View</a></li>\\n  <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"!offlineService.isOnline || perms.edit\\\"><a class=\\\"nav-link\\\" routerLink=\\\"edit\\\" routerLinkActive=\\\"active\\\">Edit</a></li>\\n  <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"!offlineService.isOnline || perms.delete\\\"><a class=\\\"nav-link\\\" routerLink=\\\"delete\\\" routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-trash glyphicon glyphicon-trash\\\"></span></a></li>\\n</ul>\\n<router-outlet></router-outlet>\\n\"","import { Injectable } from '@angular/core';\nimport { FormioResourceConfig } from 'angular-formio/resource';\nimport { AppConfig } from '../../config';\n\n@Injectable()\nexport class SubmissionResourceConfig extends FormioResourceConfig {\n  constructor(public config: AppConfig) {\n    super();\n  }\n\n  set name(name) {}\n  get name() {\n    return this.config.formName;\n  }\n\n  set form(form) {}\n  get form() {\n    return this.config.formPath;\n  }\n}\n","import { Injectable, Optional, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormioLoader } from 'angular-formio';\nimport { FormioResourceService, FormioResourceConfig, FormioResources } from 'angular-formio/resource';\nimport { AppConfig } from '../../config';\n\n@Injectable()\nexport class SubmissionService extends FormioResourceService {\n  public onResource: EventEmitter<any> = new EventEmitter();\n  constructor(\n    public appConfig: AppConfig,\n    public config: FormioResourceConfig,\n    public loader: FormioLoader,\n    @Optional() public resourcesService: FormioResources\n  ) {\n    super(appConfig, config, loader, resourcesService);\n  }\n  setContext(route: ActivatedRoute) {\n    if (this.appConfig.currentForm) {\n      super.init();\n      return super.setContext(route);\n    }\n    route.params.subscribe(params => {\n      this.appConfig.loadForm(true).then(() => {\n        super.init();\n        super.setContext(route);\n      });\n    });\n  }\n  save(resource: any) {\n    return super.save(this.appConfig.submitAlter(resource)).then((submission) => {\n      this.appConfig.parent.send({formSubmission: submission});\n    });\n  }\n  loadResource(route: ActivatedRoute) {\n    this.resourceLoaded = new Promise((resolve) => {\n      route.params.subscribe(params => {\n        this.appConfig.loadForm(true).then(() => {\n          super.init();\n          super.loadResource(route).then((resource) => {\n            this.onResource.emit(resource);\n            resolve(resource);\n          });\n        });\n      });\n    });\n  }\n  init() {}\n}\n","import { Component } from '@angular/core';\nimport { SubmissionGridBodyComponent } from 'angular-formio/grid';\nimport { OfflineService } from '../../../../offline/offline.service';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html'\n})\nexport class OfflineSubmissionGridBodyComponent extends SubmissionGridBodyComponent {\n  constructor(\n    public offlineService: OfflineService\n  ) {\n    super();\n  }\n\n  tableClass(row) {\n    if (this.offlineService.offlineOps.hasOwnProperty(row._id)) {\n      switch (this.offlineService.offlineOps[row._id]) {\n        case 'POST':\n          return 'table-success';\n        case 'PUT':\n          return 'table-warning';\n        case 'DELETE':\n          return 'table-danger';\n      }\n    }\n    return '';\n  }\n}\n","import { Component, ComponentFactoryResolver, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport { FormioLoader, FormioAlerts } from 'angular-formio';\nimport { FormioGridComponent, SubmissionGridFooterComponent, SubmissionGridHeaderComponent } from 'angular-formio/grid';\nimport { OfflineSubmissionGridBodyComponent } from './body/body.component';\nimport { OfflineService } from '../../../offline/offline.service';\n\n@Component({\n  selector: 'offline-submission-grid',\n  templateUrl: './submission-grid.component.html'\n})\nexport class OfflineSubmissionGridComponent extends FormioGridComponent {\n  constructor(\n    public loader: FormioLoader,\n    public alerts: FormioAlerts,\n    private _resolver: ComponentFactoryResolver,\n    private _ref: ChangeDetectorRef,\n    public offlineService: OfflineService,\n  ) {\n    super(loader, alerts, _resolver, _ref);\n    this.refresh = new EventEmitter();\n    this.offlineService.onlineChange.subscribe((online) => {\n      this._ref.detectChanges();\n      this.refresh.emit({});\n    });\n    this.components = {\n      header: SubmissionGridHeaderComponent,\n      body: OfflineSubmissionGridBodyComponent,\n      footer: SubmissionGridFooterComponent\n    };\n  }\n\n  clearOfflineSubmissions() {\n    if (window.confirm('This will clear the offline submission cache. Are you sure?')) {\n      this.offlineService.clearOfflineSubmissions().then(() => this.refresh.emit({}));\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormioResourceIndexComponent } from 'angular-formio/resource';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html'\n})\nexport class SubmissionIndexComponent extends FormioResourceIndexComponent {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0vc3VibWlzc2lvbi9yZXNvdXJjZS9yZXNvdXJjZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormioAuthService } from 'angular-formio/auth';\nimport { FormioResourceComponent, FormioResourceService } from 'angular-formio/resource';\nimport { SubmissionService } from '../SubmissionService';\nimport { OfflineService } from '../../../offline/offline.service';\n\n@Component({\n  selector: 'app-resource',\n  templateUrl: './resource.component.html',\n  styleUrls: ['./resource.component.scss']\n})\nexport class SubmissionResourceComponent extends FormioResourceComponent implements OnInit {\n  public downloadUrl: string;\n  constructor(\n    public service: FormioResourceService,\n    public route: ActivatedRoute,\n    public auth: FormioAuthService,\n    public offlineService: OfflineService\n  ) {\n    super(service, route, auth);\n  }\n\n  getDownloadPDF() {\n    (this.service as SubmissionService).onResource.subscribe(() => {\n      this.service.formio.getDownloadUrl().then((url) => {\n        this.downloadUrl = url;\n      });\n    });\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.getDownloadPDF();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormioModule } from 'angular-formio';\nimport {\n  FormioResource,\n  FormioResourceConfig,\n  FormioResourceService,\n  FormioResourceRoutes\n} from 'angular-formio/resource';\nimport { FormioGrid } from 'angular-formio/grid';\nimport { SubmissionService } from './SubmissionService';\nimport { SubmissionResourceConfig } from './SubmissionResourceConfig';\nimport { SubmissionIndexComponent } from './index/index.component';\nimport { SubmissionResourceComponent } from './resource/resource.component';\nimport { OfflineSubmissionGridComponent } from './grid/submission-grid.component';\nimport { OfflineSubmissionGridBodyComponent } from './grid/body/body.component';\n\n@NgModule({\n  declarations: [\n    SubmissionIndexComponent,\n    SubmissionResourceComponent,\n    OfflineSubmissionGridComponent,\n    OfflineSubmissionGridBodyComponent\n  ],\n  imports: [\n    CommonModule,\n    FormioModule,\n    FormioGrid,\n    FormioResource,\n    RouterModule.forChild(FormioResourceRoutes({\n      index: SubmissionIndexComponent,\n      resource: SubmissionResourceComponent\n    }))\n  ],\n  providers: [\n    {\n      provide: FormioResourceService,\n      useClass: SubmissionService\n    },\n    {\n      provide: FormioResourceConfig,\n      useClass: SubmissionResourceConfig\n    }\n  ],\n  entryComponents: [\n    OfflineSubmissionGridBodyComponent\n  ]\n})\nexport class SubmissionModule { }\n"],"sourceRoot":""}