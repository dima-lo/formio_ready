{"version":3,"sources":["./node_modules/angular-formio/grid/index.js","./node_modules/angular-formio/resource/create/create.component.js","./node_modules/angular-formio/resource/create/create.component.d.ts.FormioResourceCreateComponent.html","./node_modules/angular-formio/resource/delete/delete.component.js","./node_modules/angular-formio/resource/delete/delete.component.d.ts.FormioResourceDeleteComponent.html","./node_modules/angular-formio/resource/edit/edit.component.js","./node_modules/angular-formio/resource/index.js","./node_modules/angular-formio/resource/index/index.component.js","./node_modules/angular-formio/resource/resource.component.js","./node_modules/angular-formio/resource/resource.config.js","./node_modules/angular-formio/resource/resource.module.js","./node_modules/angular-formio/resource/resource.routes.js","./node_modules/angular-formio/resource/resource.service.js","./node_modules/angular-formio/resource/view/view.component.js"],"names":[],"mappings":"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B;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uCAAuC,yBAAyB;AAChE;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+DAA+D;AAC/D,SAAS,OAAO,uEAAqB,EAAE;AACvC,SAAS,OAAO,8DAAc,EAAE;AAChC,SAAS,OAAO,sDAAM,EAAE;AACxB,SAAS,OAAO,qEAAoB,EAAE;AACtC,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,CAAC;AACuC;AACxC,WAAW,EAiBV;;;;;;;;;;;;;ACnHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AAC6D;AACW;AACf;AACE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,iCAAiC,6DAAa;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D;AAC1D,SAAS,OAAO,uEAAqB,EAAE;AACvC,SAAS,OAAO,8DAAc,EAAE;AAChC,SAAS,OAAO,oEAAiB,EAAE;AACnC,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,OAAO,sDAAM;AACtB,MAAM;AACN;AACA,CAAC;AACkC;AACnC,WAAW,EAkBV;;;;;;;;;;;;;ACvHD;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AAC2C;AAC3C;AACA;AACA;AACO,sCAAsC;AAC7C,WAAW,EAaV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,CAAC;AAC+B;AAChC,WAAW,EAOV;;;;;;;;;;;;;AC3CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACyC;AACM;AACA;AACC;AACkB;AACjB;AACc;AACK;AACA;AACM;AACA;AACH;AACd;AACV;AAC/C;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,mEAAY,yBAAyB,sEAAoB;AACxE;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,mEAAY,yBAAyB,sEAAoB;AACxE;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,2DAAY;AACpC,wBAAwB,4DAAU;AAClC,wBAAwB,4DAAY;AACpC;AACA;AACA,wBAAwB,2EAAuB;AAC/C,wBAAwB,uFAA6B;AACrD,wBAAwB,oFAA4B;AACpD,wBAAwB,gFAA2B;AACnD,wBAAwB,gFAA2B;AACnD,wBAAwB,sFAA6B;AACrD;AACA;AACA,wBAAwB,6EAAY;AACpC;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;AACyB;;;;;;;;;;;;;ACnE1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AAC+D;AACK;AACA;AACM;AACA;AACH;AACvE;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA,+DAA+D,mFAA4B;AAC3F,SAAS;AACT;AACA;AACA,iEAAiE,sFAA6B;AAC9F,SAAS;AACT;AACA;AACA,qEAAqE,2EAAuB;AAC5F;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qEAAqE,gFAA2B;AAChG,iBAAiB;AACjB;AACA;AACA,qEAAqE,gFAA2B;AAChG,iBAAiB;AACjB;AACA;AACA,yEAAyE,sFAA6B;AACtG;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACmF;AAC1B;AACH;AACY;AACA;AACf;AACT;AACD;AAClB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,6EAAY;AACtC,2BAA2B,0DAAY;AACvC,8BAA8B,0DAAO;AACrC,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAAM;AAClB,YAAY,+CAAM;AAClB,YAAY,+CAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA,0BAA0B,+CAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,8BAA8B,+CAAM;AACpC;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+BAA+B,EAAE;AACzD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,+BAA+B,EAAE;AACzD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,0DAAO;AAC1B;AACA;AACA;AACA,mBAAmB,0DAAO;AAC1B;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,wBAAwB,8CAAK;AAC7B,mCAAmC,EAAE;AACrC,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAAC;AACjC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,mBAAmB,0DAAO;AAC1B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oBAAoB;AACvD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,qCAAqC,EAAE;AAC/D;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2BAA2B,EAAE;AACrD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2BAA2B,EAAE;AACrD;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2BAA2B,EAAE;AACrD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,wBAAwB,2BAA2B,EAAE;AACrD;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,wDAAwD;AACxD,SAAS,OAAO,8DAAe,EAAE;AACjC,SAAS,OAAO,qEAAoB,EAAE;AACtC,SAAS,OAAO,6EAAY,EAAE;AAC9B,SAAS,OAAO,kEAAe,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AACnE,SAAS,OAAO,4DAAc;AAC9B,MAAM;AACN;AACA,CAAC;AACgC;AACjC,WAAW,EA6CV;;;;;;;;;;;;;ACpZD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AAC0C;AACkB;AACF;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8DAA8D;AAC9D,SAAS,OAAO,uEAAqB,EAAE;AACvC,SAAS,OAAO,qEAAoB;AACpC,MAAM;AACN;AACA,CAAC;AACsC;AACvC,WAAW,EAKV","file":"default~form-submission-submission-module-ngfactory~offline-offline-module-ngfactory.js","sourcesContent":["/**\n * @fileoverview added by tsickle\n * Generated from: grid/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nexport { FormioGrid } from './grid.module';\nexport { GridHeaderComponent } from './GridHeaderComponent';\nexport { GridFooterComponent } from './GridFooterComponent';\nexport { GridBodyComponent } from './GridBodyComponent';\nexport { FormGridHeaderComponent } from './form/FormGridHeader.component';\nexport { FormGridBodyComponent } from './form/FormGridBody.component';\nexport { FormGridFooterComponent } from './form/FormGridFooter.component';\nexport { SubmissionGridHeaderComponent } from './submission/SubmissionGridHeader.component';\nexport { SubmissionGridBodyComponent } from './submission/SubmissionGridBody.component';\nexport { SubmissionGridFooterComponent } from './submission/SubmissionGridFooter.component';\nexport { FormioGridComponent } from './grid.component';\n","/**\n * @fileoverview added by tsickle\n * Generated from: resource/create/create.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { Component, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from '../resource.service';\nimport { FormioResourceConfig } from '../resource.config';\nvar FormioResourceCreateComponent = /** @class */ (function () {\n    function FormioResourceCreateComponent(service, route, router, config) {\n        this.service = service;\n        this.route = route;\n        this.router = router;\n        this.config = config;\n        this.onError = new EventEmitter();\n        this.onSuccess = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    FormioResourceCreateComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.service.setContext(this.route);\n    };\n    /**\n     * @param {?} submission\n     * @return {?}\n     */\n    FormioResourceCreateComponent.prototype.onSubmit = /**\n     * @param {?} submission\n     * @return {?}\n     */\n    function (submission) {\n        var _this = this;\n        this.service\n            .save(submission)\n            .then((/**\n         * @return {?}\n         */\n        function () {\n            _this.router.navigate(['../', _this.service.resource._id, 'view'], {\n                relativeTo: _this.route\n            });\n        }))\n            .catch((/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.onError.emit(err); }));\n    };\n    FormioResourceCreateComponent.decorators = [\n        { type: Component, args: [{\n                    styles: [\".back-button { font-size: 0.8em; } \"],\n                    template: \"<h3 *ngIf=\\\"service.form\\\" style=\\\"margin-top:0;\\\"> <a routerLink=\\\"../\\\" class=\\\"back-button\\\"> <i class=\\\"fa fa-chevron-left glyphicon glyphicon-chevron-left\\\"></i> </a> | New {{ service.form.title }} </h3> <formio [form]=\\\"service.form\\\" [submission]=\\\"service.resource\\\" [refresh]=\\\"service.refresh\\\" [error]=\\\"onError\\\" [success]=\\\"onSuccess\\\" (submit)=\\\"onSubmit($event)\\\" ></formio> \"\n                },] },\n    ];\n    /** @nocollapse */\n    FormioResourceCreateComponent.ctorParameters = function () { return [\n        { type: FormioResourceService },\n        { type: ActivatedRoute },\n        { type: Router },\n        { type: FormioResourceConfig }\n    ]; };\n    return FormioResourceCreateComponent;\n}());\nexport { FormioResourceCreateComponent };\nif (false) {\n    /** @type {?} */\n    FormioResourceCreateComponent.prototype.onError;\n    /** @type {?} */\n    FormioResourceCreateComponent.prototype.onSuccess;\n    /** @type {?} */\n    FormioResourceCreateComponent.prototype.service;\n    /** @type {?} */\n    FormioResourceCreateComponent.prototype.route;\n    /** @type {?} */\n    FormioResourceCreateComponent.prototype.router;\n    /** @type {?} */\n    FormioResourceCreateComponent.prototype.config;\n}\n","<h3 *ngIf=\"service.form\" style=\"margin-top:0;\"> <a routerLink=\"../\" class=\"back-button\"> <i class=\"fa fa-chevron-left glyphicon glyphicon-chevron-left\"></i> </a> | New {{ service.form.title }} </h3> <formio [form]=\"service.form\" [submission]=\"service.resource\" [refresh]=\"service.refresh\" [error]=\"onError\" [success]=\"onSuccess\" (submit)=\"onSubmit($event)\" ></formio> ","/**\n * @fileoverview added by tsickle\n * Generated from: resource/delete/delete.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from '../resource.service';\nvar FormioResourceDeleteComponent = /** @class */ (function () {\n    function FormioResourceDeleteComponent(service, route, router) {\n        this.service = service;\n        this.route = route;\n        this.router = router;\n    }\n    /**\n     * @return {?}\n     */\n    FormioResourceDeleteComponent.prototype.onDelete = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.service.remove().then((/**\n         * @return {?}\n         */\n        function () {\n            _this.router.navigate(['../../'], { relativeTo: _this.route });\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    FormioResourceDeleteComponent.prototype.onCancel = /**\n     * @return {?}\n     */\n    function () {\n        this.router.navigate(['../', 'view'], { relativeTo: this.route });\n    };\n    FormioResourceDeleteComponent.decorators = [\n        { type: Component, args: [{\n                    template: \"<h3>Are you sure you wish to delete this record?</h3> <div class=\\\"btn-toolbar\\\"> <button type=\\\"button\\\" (click)=\\\"onDelete()\\\" class=\\\"btn btn-danger\\\" style=\\\"margin-right: 10px;\\\">Yes</button> <button type=\\\"button\\\" (click)=\\\"onCancel()\\\" class=\\\"btn btn-danger\\\">No</button> </div> \"\n                },] },\n    ];\n    /** @nocollapse */\n    FormioResourceDeleteComponent.ctorParameters = function () { return [\n        { type: FormioResourceService },\n        { type: ActivatedRoute },\n        { type: Router }\n    ]; };\n    return FormioResourceDeleteComponent;\n}());\nexport { FormioResourceDeleteComponent };\nif (false) {\n    /** @type {?} */\n    FormioResourceDeleteComponent.prototype.service;\n    /** @type {?} */\n    FormioResourceDeleteComponent.prototype.route;\n    /** @type {?} */\n    FormioResourceDeleteComponent.prototype.router;\n}\n","<h3>Are you sure you wish to delete this record?</h3> <div class=\"btn-toolbar\"> <button type=\"button\" (click)=\"onDelete()\" class=\"btn btn-danger\" style=\"margin-right: 10px;\">Yes</button> <button type=\"button\" (click)=\"onCancel()\" class=\"btn btn-danger\">No</button> </div> ","/**\n * @fileoverview added by tsickle\n * Generated from: resource/edit/edit.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { Component, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from '../resource.service';\nimport { FormioResourceConfig } from '../resource.config';\nvar FormioResourceEditComponent = /** @class */ (function () {\n    function FormioResourceEditComponent(service, route, router, config) {\n        this.service = service;\n        this.route = route;\n        this.router = router;\n        this.config = config;\n        this.triggerError = new EventEmitter();\n    }\n    /**\n     * @param {?} submission\n     * @return {?}\n     */\n    FormioResourceEditComponent.prototype.onSubmit = /**\n     * @param {?} submission\n     * @return {?}\n     */\n    function (submission) {\n        var _this = this;\n        /** @type {?} */\n        var edit = this.service.resource;\n        edit.data = submission.data;\n        this.service.save(edit)\n            .then((/**\n         * @return {?}\n         */\n        function () {\n            _this.router.navigate(['../', 'view'], { relativeTo: _this.route });\n        }))\n            .catch((/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.triggerError.emit(err); }));\n    };\n    FormioResourceEditComponent.decorators = [\n        { type: Component, args: [{\n                    template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.resource\\\" [error]=\\\"triggerError\\\" [refresh]=\\\"service.refresh\\\" (submit)=\\\"onSubmit($event)\\\" ></formio> \"\n                },] },\n    ];\n    /** @nocollapse */\n    FormioResourceEditComponent.ctorParameters = function () { return [\n        { type: FormioResourceService },\n        { type: ActivatedRoute },\n        { type: Router },\n        { type: FormioResourceConfig }\n    ]; };\n    return FormioResourceEditComponent;\n}());\nexport { FormioResourceEditComponent };\nif (false) {\n    /** @type {?} */\n    FormioResourceEditComponent.prototype.triggerError;\n    /** @type {?} */\n    FormioResourceEditComponent.prototype.service;\n    /** @type {?} */\n    FormioResourceEditComponent.prototype.route;\n    /** @type {?} */\n    FormioResourceEditComponent.prototype.router;\n    /** @type {?} */\n    FormioResourceEditComponent.prototype.config;\n}\n","/**\n * @fileoverview added by tsickle\n * Generated from: resource/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nexport { FormioResourceConfig } from './resource.config';\nexport { FormioResources } from './resources.service';\nexport { FormioResourceService } from './resource.service';\nexport { FormioResourceComponent } from './resource.component';\nexport { FormioResourceViewComponent } from './view/view.component';\nexport { FormioResourceEditComponent } from './edit/edit.component';\nexport { FormioResourceDeleteComponent } from './delete/delete.component';\nexport { FormioResourceCreateComponent } from './create/create.component';\nexport { FormioResourceIndexComponent } from './index/index.component';\nexport { FormioResourceRoutes } from './resource.routes';\nexport { FormioResource } from './resource.module';\n","/**\n * @fileoverview added by tsickle\n * Generated from: resource/index/index.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { Component, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormioResourceService } from '../resource.service';\nimport { FormioResourceConfig } from '../resource.config';\nimport { each } from 'lodash';\nvar FormioResourceIndexComponent = /** @class */ (function () {\n    function FormioResourceIndexComponent(service, route, router, config, cdr) {\n        this.service = service;\n        this.route = route;\n        this.router = router;\n        this.config = config;\n        this.cdr = cdr;\n    }\n    /**\n     * @return {?}\n     */\n    FormioResourceIndexComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.gridQuery = {};\n        this.service.setContext(this.route);\n        this.service.formLoaded.then((/**\n         * @return {?}\n         */\n        function () {\n            if (_this.service &&\n                _this.config.parents &&\n                _this.config.parents.length) {\n                _this.service.loadParents().then((/**\n                 * @param {?} parents\n                 * @return {?}\n                 */\n                function (parents) {\n                    each(parents, (/**\n                     * @param {?} parent\n                     * @return {?}\n                     */\n                    function (parent) {\n                        if (parent && parent.filter) {\n                            _this.gridQuery['data.' + parent.name + '._id'] =\n                                parent.resource._id;\n                        }\n                    }));\n                    // Set the source to load the grid.\n                    _this.gridSrc = _this.service.formUrl;\n                    _this.createText = \"New \" + _this.service.form.title;\n                }));\n            }\n            else if (_this.service.formUrl) {\n                _this.gridSrc = _this.service.formUrl;\n                _this.createText = \"New \" + _this.service.form.title;\n            }\n            _this.cdr.detectChanges();\n        }));\n    };\n    /**\n     * @param {?} row\n     * @return {?}\n     */\n    FormioResourceIndexComponent.prototype.onSelect = /**\n     * @param {?} row\n     * @return {?}\n     */\n    function (row) {\n        this.router.navigate([row._id, 'view'], { relativeTo: this.route });\n    };\n    /**\n     * @return {?}\n     */\n    FormioResourceIndexComponent.prototype.onCreateItem = /**\n     * @return {?}\n     */\n    function () {\n        this.router.navigate(['new'], { relativeTo: this.route });\n    };\n    FormioResourceIndexComponent.decorators = [\n        { type: Component, args: [{\n                    template: \"<formio-alerts [alerts]=\\\"service.alerts\\\"></formio-alerts> <formio-grid [src]=\\\"gridSrc\\\" [query]=\\\"gridQuery\\\" [onForm]=\\\"service.formLoaded\\\" (rowSelect)=\\\"onSelect($event)\\\" (error)=\\\"service.onError($event)\\\" (createItem)=\\\"onCreateItem()\\\" [createText]=\\\"createText\\\" ></formio-grid> \"\n                },] },\n    ];\n    /** @nocollapse */\n    FormioResourceIndexComponent.ctorParameters = function () { return [\n        { type: FormioResourceService },\n        { type: ActivatedRoute },\n        { type: Router },\n        { type: FormioResourceConfig },\n        { type: ChangeDetectorRef }\n    ]; };\n    return FormioResourceIndexComponent;\n}());\nexport { FormioResourceIndexComponent };\nif (false) {\n    /** @type {?} */\n    FormioResourceIndexComponent.prototype.gridSrc;\n    /** @type {?} */\n    FormioResourceIndexComponent.prototype.gridQuery;\n    /** @type {?} */\n    FormioResourceIndexComponent.prototype.createText;\n    /** @type {?} */\n    FormioResourceIndexComponent.prototype.service;\n    /** @type {?} */\n    FormioResourceIndexComponent.prototype.route;\n    /** @type {?} */\n    FormioResourceIndexComponent.prototype.router;\n    /** @type {?} */\n    FormioResourceIndexComponent.prototype.config;\n    /** @type {?} */\n    FormioResourceIndexComponent.prototype.cdr;\n}\n","/**\n * @fileoverview added by tsickle\n * Generated from: resource/resource.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { ChangeDetectorRef, Component } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { FormioAuthService } from '../auth/auth.service';\nimport { FormioResourceService } from './resource.service';\nvar FormioResourceComponent = /** @class */ (function () {\n    function FormioResourceComponent(service, route, auth, changeDetectorRef, router) {\n        var _this = this;\n        this.service = service;\n        this.route = route;\n        this.auth = auth;\n        this.changeDetectorRef = changeDetectorRef;\n        this.router = router;\n        this.perms = { delete: false, edit: false };\n        // subscribe to the router events, so that we could re-load the submission if navigation happens from one submission to another\n        this.navigationSubscription = this.router.events.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        function (event) {\n            if (event instanceof NavigationEnd) {\n                _this.init();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    FormioResourceComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        this.init();\n    };\n    /**\n     * @return {?}\n     */\n    FormioResourceComponent.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.service.loadResource(this.route);\n        this.service.formLoaded.then((/**\n         * @param {?} form\n         * @return {?}\n         */\n        function (form) {\n            _this.auth.ready.then((/**\n             * @return {?}\n             */\n            function () {\n                _this.service.resourceLoaded.then((/**\n                 * @param {?} resource\n                 * @return {?}\n                 */\n                function (resource) {\n                    _this.service.formFormio.userPermissions(_this.auth.user, form, resource).then((/**\n                     * @param {?} perms\n                     * @return {?}\n                     */\n                    function (perms) {\n                        _this.perms.delete = perms.delete;\n                        _this.perms.edit = perms.edit;\n                        _this.changeDetectorRef.detectChanges();\n                    }));\n                }));\n            }));\n        }));\n    };\n    /**\n     * @return {?}\n     */\n    FormioResourceComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.navigationSubscription) {\n            this.navigationSubscription.unsubscribe();\n        }\n    };\n    FormioResourceComponent.decorators = [\n        { type: Component, args: [{\n                    template: \"<ul class=\\\"nav nav-tabs\\\" style=\\\"margin-bottom: 10px\\\"> <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"../\\\"><i class=\\\"fa fa-chevron-left glyphicon glyphicon-chevron-left\\\"></i></a></li> <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link\\\" routerLink=\\\"view\\\" routerLinkActive=\\\"active\\\">View</a></li> <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"perms.edit\\\"><a class=\\\"nav-link\\\" routerLink=\\\"edit\\\" routerLinkActive=\\\"active\\\">Edit</a></li> <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\" *ngIf=\\\"perms.delete\\\"><a class=\\\"nav-link\\\" routerLink=\\\"delete\\\" routerLinkActive=\\\"active\\\"><span class=\\\"fa fa-trash glyphicon glyphicon-trash\\\"></span></a></li> </ul> <router-outlet></router-outlet> \"\n                },] },\n    ];\n    /** @nocollapse */\n    FormioResourceComponent.ctorParameters = function () { return [\n        { type: FormioResourceService },\n        { type: ActivatedRoute },\n        { type: FormioAuthService },\n        { type: ChangeDetectorRef },\n        { type: Router }\n    ]; };\n    return FormioResourceComponent;\n}());\nexport { FormioResourceComponent };\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FormioResourceComponent.prototype.navigationSubscription;\n    /** @type {?} */\n    FormioResourceComponent.prototype.perms;\n    /** @type {?} */\n    FormioResourceComponent.prototype.service;\n    /** @type {?} */\n    FormioResourceComponent.prototype.route;\n    /** @type {?} */\n    FormioResourceComponent.prototype.auth;\n    /** @type {?} */\n    FormioResourceComponent.prototype.changeDetectorRef;\n    /** @type {?} */\n    FormioResourceComponent.prototype.router;\n}\n","/**\n * @fileoverview added by tsickle\n * Generated from: resource/resource.config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { Injectable } from '@angular/core';\n/**\n * @record\n */\nexport function FormioResourceRouteConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    FormioResourceRouteConfig.prototype.index;\n    /** @type {?|undefined} */\n    FormioResourceRouteConfig.prototype.create;\n    /** @type {?|undefined} */\n    FormioResourceRouteConfig.prototype.resource;\n    /** @type {?|undefined} */\n    FormioResourceRouteConfig.prototype.view;\n    /** @type {?|undefined} */\n    FormioResourceRouteConfig.prototype.edit;\n    /** @type {?|undefined} */\n    FormioResourceRouteConfig.prototype.delete;\n}\nvar FormioResourceConfig = /** @class */ (function () {\n    function FormioResourceConfig() {\n        this.name = '';\n        this.form = '';\n        this.parents = [];\n    }\n    FormioResourceConfig.decorators = [\n        { type: Injectable },\n    ];\n    return FormioResourceConfig;\n}());\nexport { FormioResourceConfig };\nif (false) {\n    /** @type {?} */\n    FormioResourceConfig.prototype.name;\n    /** @type {?} */\n    FormioResourceConfig.prototype.form;\n    /** @type {?} */\n    FormioResourceConfig.prototype.parents;\n}\n","/**\n * @fileoverview added by tsickle\n * Generated from: resource/resource.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormioModule } from '../formio.module';\nimport { FormioAlerts } from '../components/alerts/formio.alerts';\nimport { FormioGrid } from '../grid/grid.module';\nimport { FormioResourceComponent } from './resource.component';\nimport { FormioResourceViewComponent } from './view/view.component';\nimport { FormioResourceEditComponent } from './edit/edit.component';\nimport { FormioResourceDeleteComponent } from './delete/delete.component';\nimport { FormioResourceCreateComponent } from './create/create.component';\nimport { FormioResourceIndexComponent } from './index/index.component';\nimport { FormioResourceRoutes } from './resource.routes';\nimport { extendRouter } from '../formio.utils';\nvar FormioResource = /** @class */ (function () {\n    function FormioResource() {\n    }\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    FormioResource.forChild = /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function (config) {\n        return extendRouter(FormioResource, config, FormioResourceRoutes);\n    };\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    FormioResource.forRoot = /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function (config) {\n        return extendRouter(FormioResource, config, FormioResourceRoutes);\n    };\n    FormioResource.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        FormioModule,\n                        FormioGrid,\n                        RouterModule\n                    ],\n                    declarations: [\n                        FormioResourceComponent,\n                        FormioResourceCreateComponent,\n                        FormioResourceIndexComponent,\n                        FormioResourceViewComponent,\n                        FormioResourceEditComponent,\n                        FormioResourceDeleteComponent\n                    ],\n                    providers: [\n                        FormioAlerts\n                    ]\n                },] },\n    ];\n    return FormioResource;\n}());\nexport { FormioResource };\n","/**\n * @fileoverview added by tsickle\n * Generated from: resource/resource.routes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { FormioResourceComponent } from './resource.component';\nimport { FormioResourceViewComponent } from './view/view.component';\nimport { FormioResourceEditComponent } from './edit/edit.component';\nimport { FormioResourceDeleteComponent } from './delete/delete.component';\nimport { FormioResourceCreateComponent } from './create/create.component';\nimport { FormioResourceIndexComponent } from './index/index.component';\n/**\n * @param {?=} config\n * @return {?}\n */\nexport function FormioResourceRoutes(config) {\n    return [\n        {\n            path: '',\n            component: config && config.index ? config.index : FormioResourceIndexComponent\n        },\n        {\n            path: 'new',\n            component: config && config.create ? config.create : FormioResourceCreateComponent\n        },\n        {\n            path: ':id',\n            component: config && config.resource ? config.resource : FormioResourceComponent,\n            children: [\n                {\n                    path: '',\n                    redirectTo: 'view',\n                    pathMatch: 'full'\n                },\n                {\n                    path: 'view',\n                    component: config && config.view ? config.view : FormioResourceViewComponent\n                },\n                {\n                    path: 'edit',\n                    component: config && config.edit ? config.edit : FormioResourceEditComponent\n                },\n                {\n                    path: 'delete',\n                    component: config && config.delete ? config.delete : FormioResourceDeleteComponent\n                }\n            ]\n        }\n    ];\n}\n","/**\n * @fileoverview added by tsickle\n * Generated from: resource/resource.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { ApplicationRef, EventEmitter, Injectable, Optional } from '@angular/core';\nimport { FormioResourceConfig } from './resource.config';\nimport { FormioResources } from './resources.service';\nimport { FormioAlerts } from '../components/alerts/formio.alerts';\nimport { FormioLoader } from '../components/loader/formio.loader';\nimport { FormioAppConfig } from '../formio.config';\nimport Promise from 'native-promise-only';\nimport { Formio, Utils } from 'formiojs';\nimport _ from 'lodash';\nvar FormioResourceService = /** @class */ (function () {\n    function FormioResourceService(appConfig, config, loader, resourcesService, appRef) {\n        var _this = this;\n        this.appConfig = appConfig;\n        this.config = config;\n        this.loader = loader;\n        this.resourcesService = resourcesService;\n        this.appRef = appRef;\n        this.initialized = false;\n        this.alerts = new FormioAlerts();\n        this.refresh = new EventEmitter();\n        this.formLoaded = new Promise((/**\n         * @param {?} resolve\n         * @param {?} reject\n         * @return {?}\n         */\n        function (resolve, reject) {\n            _this.formResolve = resolve;\n            _this.formReject = reject;\n        }));\n        this.init();\n    }\n    /**\n     * @return {?}\n     */\n    FormioResourceService.prototype.initialize = /**\n     * @return {?}\n     */\n    function () {\n        console.warn('FormioResourceService.initialize() has been deprecated.');\n    };\n    /**\n     * @return {?}\n     */\n    FormioResourceService.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        if (this.initialized) {\n            return;\n        }\n        this.initialized = true;\n        if (this.appConfig && this.appConfig.appUrl) {\n            Formio.setBaseUrl(this.appConfig.apiUrl);\n            Formio.setProjectUrl(this.appConfig.appUrl);\n            Formio.formOnly = this.appConfig.formOnly;\n        }\n        else {\n            console.error('You must provide an AppConfig within your application!');\n        }\n        // Create the form url and load the resources.\n        this.formUrl = this.appConfig.appUrl + '/' + this.config.form;\n        this.resource = { data: {} };\n        // Add this resource service to the list of all resources in context.\n        if (this.resourcesService) {\n            this.resources = this.resourcesService.resources;\n            this.resources[this.config.name] = this;\n        }\n        return this.loadForm();\n    };\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    FormioResourceService.prototype.onError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        this.alerts.setAlert({\n            type: 'danger',\n            message: error.message || error\n        });\n        if (this.resourcesService) {\n            this.resourcesService.error.emit(error);\n        }\n        throw error;\n    };\n    /**\n     * @param {?} err\n     * @return {?}\n     */\n    FormioResourceService.prototype.onFormError = /**\n     * @param {?} err\n     * @return {?}\n     */\n    function (err) {\n        this.formReject(err);\n        this.onError(err);\n    };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    FormioResourceService.prototype.setContext = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) {\n        this.resourceId = route.snapshot.params['id'];\n        this.resource = { data: {} };\n        this.resourceUrl = this.appConfig.appUrl + '/' + this.config.form;\n        if (this.resourceId) {\n            this.resourceUrl += '/submission/' + this.resourceId;\n        }\n        this.formio = new Formio(this.resourceUrl);\n        if (this.resourcesService) {\n            this.resources[this.config.name] = this;\n        }\n        this.loadParents();\n    };\n    /**\n     * @return {?}\n     */\n    FormioResourceService.prototype.loadForm = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.formFormio = new Formio(this.formUrl);\n        this.loader.setLoading(true);\n        this.formLoading = this.formFormio\n            .loadForm()\n            .then((/**\n         * @param {?} form\n         * @return {?}\n         */\n        function (form) {\n            _this.form = form;\n            _this.formResolve(form);\n            _this.loader.setLoading(false);\n            _this.loadParents();\n            _this.appRef.tick();\n            return form;\n        }), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.onFormError(err); }))\n            .catch((/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.onFormError(err); }));\n        return this.formLoading;\n    };\n    /**\n     * @return {?}\n     */\n    FormioResourceService.prototype.loadParents = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.config.parents || !this.config.parents.length) {\n            return Promise.resolve([]);\n        }\n        if (!this.resourcesService) {\n            console.warn('You must provide the FormioResources within your application to use nested resources.');\n            return Promise.resolve([]);\n        }\n        return this.formLoading.then((/**\n         * @param {?} form\n         * @return {?}\n         */\n        function (form) {\n            // Iterate through the list of parents.\n            /** @type {?} */\n            var _parentsLoaded = [];\n            _this.config.parents.forEach((/**\n             * @param {?} parent\n             * @return {?}\n             */\n            function (parent) {\n                /** @type {?} */\n                var resourceName = parent.resource || parent;\n                /** @type {?} */\n                var resourceField = parent.field || parent;\n                /** @type {?} */\n                var filterResource = parent.hasOwnProperty('filter') ? parent.filter : true;\n                if (_this.resources.hasOwnProperty(resourceName) && _this.resources[resourceName].resourceLoaded) {\n                    _parentsLoaded.push(_this.resources[resourceName].resourceLoaded.then((/**\n                     * @param {?} resource\n                     * @return {?}\n                     */\n                    function (resource) {\n                        /** @type {?} */\n                        var parentPath = '';\n                        Utils.eachComponent(form.components, (/**\n                         * @param {?} component\n                         * @param {?} path\n                         * @return {?}\n                         */\n                        function (component, path) {\n                            if (component.key === resourceField) {\n                                component.hidden = true;\n                                component.clearOnHide = false;\n                                _.set(_this.resource.data, path, resource);\n                                parentPath = path;\n                                return true;\n                            }\n                        }));\n                        return {\n                            name: parentPath,\n                            filter: filterResource,\n                            resource: resource\n                        };\n                    })));\n                }\n            }));\n            // When all the parents have loaded, emit that to the onParents emitter.\n            return Promise.all(_parentsLoaded).then((/**\n             * @param {?} parents\n             * @return {?}\n             */\n            function (parents) {\n                _this.refresh.emit({\n                    form: form,\n                    submission: _this.resource\n                });\n                return parents;\n            }));\n        }));\n    };\n    /**\n     * @param {?} err\n     * @return {?}\n     */\n    FormioResourceService.prototype.onSubmissionError = /**\n     * @param {?} err\n     * @return {?}\n     */\n    function (err) {\n        this.onError(err);\n    };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    FormioResourceService.prototype.loadResource = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) {\n        var _this = this;\n        this.setContext(route);\n        this.loader.setLoading(true);\n        this.resourceLoading = this.resourceLoaded = this.formio\n            .loadSubmission(null, { ignoreCache: true })\n            .then((/**\n         * @param {?} resource\n         * @return {?}\n         */\n        function (resource) {\n            _this.resource = resource;\n            _this.loader.setLoading(false);\n            _this.refresh.emit({\n                property: 'submission',\n                value: _this.resource\n            });\n            return resource;\n        }), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.onSubmissionError(err); }))\n            .catch((/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.onSubmissionError(err); }));\n        return this.resourceLoading;\n    };\n    /**\n     * @param {?} resource\n     * @return {?}\n     */\n    FormioResourceService.prototype.save = /**\n     * @param {?} resource\n     * @return {?}\n     */\n    function (resource) {\n        var _this = this;\n        /** @type {?} */\n        var formio = resource._id ? this.formio : this.formFormio;\n        return formio\n            .saveSubmission(resource)\n            .then((/**\n         * @param {?} saved\n         * @return {?}\n         */\n        function (saved) {\n            _this.resource = saved;\n            return saved;\n        }), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.onError(err); }))\n            .catch((/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.onError(err); }));\n    };\n    /**\n     * @return {?}\n     */\n    FormioResourceService.prototype.remove = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        return this.formio\n            .deleteSubmission()\n            .then((/**\n         * @return {?}\n         */\n        function () {\n            _this.resource = null;\n        }), (/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.onError(err); }))\n            .catch((/**\n         * @param {?} err\n         * @return {?}\n         */\n        function (err) { return _this.onError(err); }));\n    };\n    FormioResourceService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    FormioResourceService.ctorParameters = function () { return [\n        { type: FormioAppConfig },\n        { type: FormioResourceConfig },\n        { type: FormioLoader },\n        { type: FormioResources, decorators: [{ type: Optional }] },\n        { type: ApplicationRef }\n    ]; };\n    return FormioResourceService;\n}());\nexport { FormioResourceService };\nif (false) {\n    /** @type {?} */\n    FormioResourceService.prototype.initialized;\n    /** @type {?} */\n    FormioResourceService.prototype.form;\n    /** @type {?} */\n    FormioResourceService.prototype.alerts;\n    /** @type {?} */\n    FormioResourceService.prototype.resource;\n    /** @type {?} */\n    FormioResourceService.prototype.resourceUrl;\n    /** @type {?} */\n    FormioResourceService.prototype.formUrl;\n    /** @type {?} */\n    FormioResourceService.prototype.formFormio;\n    /** @type {?} */\n    FormioResourceService.prototype.formio;\n    /** @type {?} */\n    FormioResourceService.prototype.refresh;\n    /** @type {?} */\n    FormioResourceService.prototype.resourceLoading;\n    /** @type {?} */\n    FormioResourceService.prototype.resourceLoaded;\n    /** @type {?} */\n    FormioResourceService.prototype.resourceId;\n    /** @type {?} */\n    FormioResourceService.prototype.resources;\n    /** @type {?} */\n    FormioResourceService.prototype.formLoading;\n    /** @type {?} */\n    FormioResourceService.prototype.formLoaded;\n    /** @type {?} */\n    FormioResourceService.prototype.formResolve;\n    /** @type {?} */\n    FormioResourceService.prototype.formReject;\n    /** @type {?} */\n    FormioResourceService.prototype.appConfig;\n    /** @type {?} */\n    FormioResourceService.prototype.config;\n    /** @type {?} */\n    FormioResourceService.prototype.loader;\n    /** @type {?} */\n    FormioResourceService.prototype.resourcesService;\n    /** @type {?} */\n    FormioResourceService.prototype.appRef;\n}\n","/**\n * @fileoverview added by tsickle\n * Generated from: resource/view/view.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport { Component } from '@angular/core';\nimport { FormioResourceService } from '../resource.service';\nimport { FormioResourceConfig } from '../resource.config';\nvar FormioResourceViewComponent = /** @class */ (function () {\n    function FormioResourceViewComponent(service, config) {\n        this.service = service;\n        this.config = config;\n    }\n    FormioResourceViewComponent.decorators = [\n        { type: Component, args: [{\n                    template: \"<formio [form]=\\\"service.form\\\" [submission]=\\\"service.resource\\\" [refresh]=\\\"service.refresh\\\" [hideComponents]=\\\"config.parents\\\" [readOnly]=\\\"true\\\" ></formio> \"\n                },] },\n    ];\n    /** @nocollapse */\n    FormioResourceViewComponent.ctorParameters = function () { return [\n        { type: FormioResourceService },\n        { type: FormioResourceConfig }\n    ]; };\n    return FormioResourceViewComponent;\n}());\nexport { FormioResourceViewComponent };\nif (false) {\n    /** @type {?} */\n    FormioResourceViewComponent.prototype.service;\n    /** @type {?} */\n    FormioResourceViewComponent.prototype.config;\n}\n"],"sourceRoot":"webpack:///"}