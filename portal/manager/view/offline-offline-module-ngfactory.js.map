{"version":3,"sources":["./node_modules/angular-formio/grid/grid.component.d.ts.FormioGridComponent.html","./src/app/offline/edit/edit.component.html","./src/app/offline/edit/edit.component.ts","./src/app/offline/grid/body/body.component.html","./src/app/offline/grid/body/body.component.ts","./src/app/offline/grid/footer/footer.component.html","./src/app/offline/grid/footer/footer.component.ts","./src/app/offline/grid/header/header.component.html","./src/app/offline/grid/header/header.component.ts","./src/app/offline/offline.component.html","./src/app/offline/offline.component.ts","./src/app/offline/offline.config.ts","./src/app/offline/offline.module.ts","./src/app/offline/offline.resource.service.ts","./src/app/offline/resource/resource.component.html","./src/app/offline/resource/resource.component.ts","./src/app/offline/view/view.component.html","./src/app/offline/view/view.component.ts"],"names":[],"mappings":"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","file":"offline-offline-module-ngfactory.js","sourcesContent":["<ng-template #headerTemplate></ng-template> <ng-template #bodyTemplate></ng-template> <ng-template #footerTemplate></ng-template> <div class=\"formio-grid\"> <formio-alerts [alerts]=\"alerts\"></formio-alerts> <table class=\"table table-bordered table-striped table-hover\"> <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"header.template\"></ng-container> <formio-loader></formio-loader> <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"body.template\"></ng-container> <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"footer.template\"></ng-container> </table> </div> ","<div class=\"card card-body bg-light\">\n  <h3>Offline Information</h3>\n  <ul>\n    <li>Request ID: {{ service.resource?.request?._id }}</li>\n    <li>Method: {{ service.resource?.request?.method }}</li>\n    <li>URL: {{ service.resource?.request?.url }}</li>\n  </ul>\n</div>\n<formio\n  [form]=\"service.form\"\n  [submission]=\"service.resource?.request?.data\"\n  [error]=\"triggerError\"\n  [refresh]=\"service.refresh\"\n  (submit)=\"onSubmit($event)\"\n></formio>\n","import { Component, OnInit } from '@angular/core';\nimport { FormioResourceEditComponent } from 'angular-formio/resource';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html'\n})\nexport class OfflineEditComponent extends FormioResourceEditComponent {\n  onSubmit(submission: any) {\n    this.service.save(submission)\n      .then(() => {\n        this.router.navigate(['../', 'view'], { relativeTo: this.route });\n      })\n      .catch((err) => this.triggerError.emit(err));\n  }\n}\n","<ng-template>\n  <tbody>\n  <tr *ngFor=\"let row of rows\" (click)=\"onRowSelect($event, row)\">\n    <td>{{ row.created }}</td>\n    <td>{{ getMethod(row.method) }}</td>\n    <td>{{ row.url }}</td>\n  </tr>\n  </tbody>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { GridBodyComponent } from 'angular-formio/grid';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html'\n})\nexport class OfflineBodyComponent extends GridBodyComponent {\n  // TODO: add explicit constructor\n\n  getMethod(method) {\n    switch (method) {\n      case 'POST':\n        return 'Create';\n      case 'PUT':\n        return 'Update';\n      case 'DELETE':\n        return 'Delete';\n    }\n  }\n}\n","<ng-template>\n  <tfoot class=\"formio-grid-footer\"></tfoot>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { GridFooterComponent } from 'angular-formio/grid';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html'\n})\nexport class OfflineFooterComponent extends GridFooterComponent {\n  // TODO: add explicit constructor\n}\n","<ng-template>\n  <thead>\n  <tr>\n    <th>Created</th>\n    <th>Operation</th>\n    <th>Url</th>\n  </tr>\n  </thead>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { GridHeaderComponent } from 'angular-formio/grid';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class OfflineHeaderComponent extends GridHeaderComponent {\n  // TODO: add explicit constructor\n}\n","<h4>Offline Tasks</h4>\n<formio-grid\n  [src]=\"gridSrc\"\n  [components]=\"gridComps\"\n  [refresh]=\"refreshGrid\"\n  [items]=\"offlineService.offlineSubmissions\"\n  [query]=\"gridQuery\"\n  [onForm]=\"service.formLoaded\"\n  (rowSelect)=\"onSelect($event)\"\n  (error)=\"service.onError($event)\"\n  createText=\"\"\n></formio-grid>\n<button [attr.disabled]=\"offlineService.isOnline ? null : ''\" type=\"button\" class=\"btn btn-warning mr-3\" (click)=\"offlineService.dequeueSubmissions()\">\n  <i [ngClass]=\"{\n    'fa-spin fa-refresh': offlineService.sync,\n    'fa-send': !offlineService.sync\n  }\" class=\"fa mr-1\"></i> Process Tasks\n</button>\n<button type=\"button\" class=\"btn btn-light mr-3\" (click)=\"emptyQueue()\"><i class=\"fa fa-trash mr-2\"></i> Empty Queue</button>\n<button type=\"button\" class=\"btn btn-light\" (click)=\"clearOffline()\"><i class=\"fa fa-trash mr-2\"></i> Clear Offline Data</button>\n","import {Component, ChangeDetectorRef, EventEmitter, ViewChild} from '@angular/core';\nimport {FormioResourceConfig, FormioResourceIndexComponent, FormioResourceService} from 'angular-formio/resource';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OfflineService } from './offline.service';\nimport { OfflineHeaderComponent } from './grid/header/header.component';\nimport { OfflineBodyComponent } from './grid/body/body.component';\nimport { OfflineFooterComponent } from './grid/footer/footer.component';\nimport {FormioGridComponent} from 'angular-formio/grid';\nimport {AppConfig} from '../config';\nimport {ToastrService} from 'ngx-toastr';\n\n@Component({\n  selector: 'app-offline',\n  templateUrl: './offline.component.html',\n  styleUrls: ['./offline.component.scss']\n})\nexport class OfflineIndexComponent extends FormioResourceIndexComponent {\n  @ViewChild(FormioGridComponent) grid: FormioGridComponent;\n  public refreshGrid: EventEmitter<any> = new EventEmitter();\n  public gridComps: any = {\n    header: OfflineHeaderComponent,\n    body: OfflineBodyComponent,\n    footer: OfflineFooterComponent\n  };\n\n  constructor(\n    public service: FormioResourceService,\n    public route: ActivatedRoute,\n    public router: Router,\n    public config: FormioResourceConfig,\n    public offlineService: OfflineService,\n    public settings: AppConfig,\n    public toastr: ToastrService,\n    public ref: ChangeDetectorRef\n  ) {\n    super(service, route, router, config, ref);\n    this.settings.getPlan().then((plan) => {\n      if (['team', 'commercial'].indexOf(this.settings.plan) < 0) {\n        this.toastr.warning('Limited Pro Version only Allow Anonymous Submissions, please contact support@form.io');\n        this.router.navigate([`/${this.settings.path}`]);\n      }\n    });\n  }\n\n  emptyQueue() {\n    if (window.confirm('This will delete all queued offline tasks. Are you sure?')) {\n      this.offlineService.emptyQueue().then(() => this.refreshGrid.emit({}));\n    }\n  }\n\n  clearOffline() {\n    if (window.confirm('This will delete all offline data. Are you sure?')) {\n      this.offlineService.clearAll().then(() => {\n        this.offlineService.emptyQueue();\n        this.grid.refreshGrid();\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormioResourceConfig } from 'angular-formio/resource';\nimport { AppConfig } from '../config';\n\n@Injectable()\nexport class OfflineConfig extends FormioResourceConfig {\n  constructor(public config: AppConfig) {\n    super();\n  }\n\n  set name(name) {}\n  get name() {\n    return this.config.formName;\n  }\n\n  set form(form) {}\n  get form() {\n    return this.config.formPath;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormioModule } from 'angular-formio';\nimport { FormioGrid } from 'angular-formio/grid';\nimport {\n  FormioResource,\n  FormioResourceConfig,\n  FormioResourceService,\n  FormioResourceRoutes\n} from 'angular-formio/resource';\n\nimport { OfflineResourceService } from './offline.resource.service';\nimport { OfflineConfig } from './offline.config';\nimport { OfflineIndexComponent } from './offline.component';\nimport { OfflineResourceComponent } from './resource/resource.component';\nimport { OfflineViewComponent } from './view/view.component';\nimport { OfflineEditComponent } from './edit/edit.component';\nimport { OfflineHeaderComponent } from './grid/header/header.component';\nimport { OfflineBodyComponent } from './grid/body/body.component';\nimport { OfflineFooterComponent } from './grid/footer/footer.component';\n\n@NgModule({\n  declarations: [\n    OfflineIndexComponent,\n    OfflineResourceComponent,\n    OfflineViewComponent,\n    OfflineEditComponent,\n    OfflineHeaderComponent,\n    OfflineBodyComponent,\n    OfflineFooterComponent\n  ],\n  imports: [\n    CommonModule,\n    FormioModule,\n    FormioGrid,\n    FormioResource,\n    RouterModule.forChild(FormioResourceRoutes({\n      index: OfflineIndexComponent,\n      resource: OfflineResourceComponent,\n      view: OfflineViewComponent,\n      edit: OfflineEditComponent\n    }))\n  ],\n  providers: [\n    {\n      provide: FormioResourceService,\n      useClass: OfflineResourceService\n    },\n    {\n      provide: FormioResourceConfig,\n      useClass: OfflineConfig\n    }\n  ],\n  entryComponents: [\n    OfflineHeaderComponent,\n    OfflineBodyComponent,\n    OfflineFooterComponent\n  ]\n})\nexport class OfflineModule { }\n","import { Injectable, Optional, ApplicationRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormioLoader } from 'angular-formio';\nimport { FormioResourceService, FormioResourceConfig, FormioResources } from 'angular-formio/resource';\nimport { OfflineService } from './offline.service';\nimport { AppConfig } from '../config';\n\n@Injectable()\nexport class OfflineResourceService extends FormioResourceService {\n  constructor(\n    public appConfig: AppConfig,\n    public config: FormioResourceConfig,\n    public loader: FormioLoader,\n    @Optional() public resourcesService: FormioResources,\n    public appRef: ApplicationRef,\n    public offlineService: OfflineService\n  ) {\n    super(appConfig, config, loader, resourcesService, appRef);\n  }\n\n  loadResource(route: ActivatedRoute) {\n    this.setContext(route);\n    this.loader.loading = true;\n    this.resourceLoading = this.resourceLoaded = new Promise((resolve, reject) => {\n      route.params.subscribe(params => {\n        this.offlineService.offlinePlugin.ready.then(() => {\n          const submissionQueue = this.offlineService.offlinePlugin.getSubmissionQueueSubmission(params.form, params.id);\n          if (submissionQueue) {\n            this.resource = submissionQueue;\n            this.loader.loading = false;\n            this.refresh.emit({\n              property: 'submission',\n              value: this.resource\n            });\n            resolve(submissionQueue);\n          } else {\n            this.onSubmissionError('Submission not found');\n            reject('Submission not found');\n          }\n        });\n      });\n    });\n    return this.resourceLoading;\n  }\n\n  save(submission: any) {\n    return this.offlineService.offlinePlugin.ready.then(() => {\n      return this.offlineService.offlinePlugin.updateSubmissionQueueSubmission(submission);\n    });\n  }\n\n  remove() {\n    return this.offlineService.offlinePlugin.ready.then(() => {\n      return this.offlineService.offlinePlugin.removeSubmissionQueueSubmission(this.resource.request);\n    });\n  }\n}\n","<ul class=\"nav nav-tabs\" style=\"margin-bottom: 10px\">\n  <li class=\"nav-item\"><a class=\"nav-link\" routerLink=\"../\"><i class=\"fa fa-chevron-left glyphicon glyphicon-chevron-left\"></i></a></li>\n  <li class=\"nav-item\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"view\" routerLinkActive=\"active\">View</a></li>\n  <li class=\"nav-item\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"edit\" routerLinkActive=\"active\">Edit</a></li>\n  <li class=\"nav-item\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"delete\" routerLinkActive=\"active\"><span class=\"fa fa-trash glyphicon glyphicon-trash\"></span></a></li>\n</ul>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { FormioResourceComponent } from 'angular-formio/resource';\n\n@Component({\n  selector: 'app-resource',\n  templateUrl: './resource.component.html',\n  styleUrls: ['./resource.component.scss']\n})\nexport class OfflineResourceComponent extends FormioResourceComponent {}\n","<div class=\"card card-body bg-light\">\n  <h3>Offline Queue Information</h3>\n  <ul>\n    <li>Created: {{ service.resource?.request?.data?.created }}</li>\n    <li>Request ID: {{ service.resource?.request?._id }}</li>\n    <li>Method: {{ service.resource?.request?.method }}</li>\n    <li>URL: {{ service.resource?.request?.url }}</li>\n  </ul>\n</div>\n<formio\n  *ngIf=\"service.resource.request\"\n  [form]=\"service.form\"\n  [submission]=\"service.resource.request.data\"\n  [refresh]=\"service.refresh\"\n  [hideComponents]=\"config.parents\"\n  [readOnly]=\"true\"\n></formio>\n","import { Component } from '@angular/core';\nimport { FormioResourceViewComponent, FormioResourceService, FormioResourceConfig } from 'angular-formio/resource';\nimport { OfflineService } from '../offline.service';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html'\n})\nexport class OfflineViewComponent extends FormioResourceViewComponent {\n  constructor(\n    public service: FormioResourceService,\n    public config: FormioResourceConfig,\n    public offlineService: OfflineService\n  ) {\n    super(service, config);\n  }\n}\n"],"sourceRoot":"webpack:///"}