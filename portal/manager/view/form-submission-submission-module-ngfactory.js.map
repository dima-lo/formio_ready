{"version":3,"sources":["./node_modules/angular-formio/resource/edit/edit.component.d.ts.FormioResourceEditComponent.html","./node_modules/angular-formio/resource/view/view.component.d.ts.FormioResourceViewComponent.html","./src/app/form/submission/SubmissionResourceConfig.ts","./src/app/form/submission/SubmissionService.ts","./src/app/form/submission/grid/body/body.component.html","./src/app/form/submission/grid/body/body.component.ts","./src/app/form/submission/grid/submission-grid.component.html","./src/app/form/submission/grid/submission-grid.component.ts","./src/app/form/submission/index/index.component.html","./src/app/form/submission/index/index.component.ts","./src/app/form/submission/resource/resource.component.html","./src/app/form/submission/resource/resource.component.ts","./src/app/form/submission/submission.module.ts"],"names":[],"mappings":"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","file":"form-submission-submission-module-ngfactory.js","sourcesContent":["<formio [form]=\"service.form\" [submission]=\"service.resource\" [error]=\"triggerError\" [refresh]=\"service.refresh\" (submit)=\"onSubmit($event)\" ></formio> ","<formio [form]=\"service.form\" [submission]=\"service.resource\" [refresh]=\"service.refresh\" [hideComponents]=\"config.parents\" [readOnly]=\"true\" ></formio> ","import { Injectable } from '@angular/core';\nimport { FormioResourceConfig } from 'angular-formio/resource';\nimport { AppConfig } from '../../config';\n\n@Injectable()\nexport class SubmissionResourceConfig extends FormioResourceConfig {\n  constructor(public config: AppConfig) {\n    super();\n  }\n\n  set name(name) {}\n  get name() {\n    return this.config.formName;\n  }\n\n  set form(form) {}\n  get form() {\n    return this.config.formPath;\n  }\n}\n","import { Injectable, Optional, EventEmitter, ApplicationRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormioLoader } from 'angular-formio';\nimport { FormioResourceService, FormioResourceConfig, FormioResources } from 'angular-formio/resource';\nimport { AppConfig } from '../../config';\n\n@Injectable()\nexport class SubmissionService extends FormioResourceService {\n  public onResource: EventEmitter<any> = new EventEmitter();\n  constructor(\n    public appConfig: AppConfig,\n    public config: FormioResourceConfig,\n    public loader: FormioLoader,\n    @Optional() public resourcesService: FormioResources,\n    public appRef: ApplicationRef\n  ) {\n    super(appConfig, config, loader, resourcesService, appRef);\n  }\n  setContext(route: ActivatedRoute) {\n    if (this.appConfig.currentForm) {\n      super.init();\n      return super.setContext(route);\n    }\n    route.params.subscribe(params => {\n      this.appConfig.loadForm(true).then(() => {\n        super.init();\n        super.setContext(route);\n      });\n    });\n  }\n  save(resource: any) {\n    return super.save(this.appConfig.submitAlter(resource)).then((submission) => {\n      this.appConfig.parent.send({formSubmission: submission});\n    });\n  }\n  loadResource(route: ActivatedRoute) {\n    this.resourceLoaded = new Promise((resolve) => {\n      route.params.subscribe(params => {\n        this.appConfig.loadForm(true).then(() => {\n          super.init();\n          super.loadResource(route).then((resource) => {\n            this.onResource.emit(resource);\n            resolve(resource);\n          });\n        });\n      });\n    });\n  }\n  init() {}\n}\n","<ng-template>\n  <tbody>\n  <tr *ngFor=\"let row of rows\" [className]=\"tableClass(row)\" (click)=\"onRowSelect($event, row)\">\n    <td *ngFor=\"let rowHeader of header.headers\" [innerHTML]=\"view(row, rowHeader)\"></td>\n  </tr>\n  </tbody>\n</ng-template>\n","import { Component } from '@angular/core';\nimport { SubmissionGridBodyComponent } from 'angular-formio/grid';\nimport { OfflineService } from '../../../../offline/offline.service';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html'\n})\nexport class OfflineSubmissionGridBodyComponent extends SubmissionGridBodyComponent {\n  constructor(\n    public offlineService: OfflineService\n  ) {\n    super();\n  }\n\n  tableClass(row) {\n    if (this.offlineService.offlineOps.hasOwnProperty(row._id)) {\n      switch (this.offlineService.offlineOps[row._id]) {\n        case 'POST':\n          return 'table-success';\n        case 'PUT':\n          return 'table-warning';\n        case 'DELETE':\n          return 'table-danger';\n      }\n    }\n    return '';\n  }\n}\n","<ng-template #headerTemplate></ng-template>\n<ng-template #bodyTemplate></ng-template>\n<ng-template #footerTemplate></ng-template>\n<div class=\"card card-body bg-light\" *ngIf=\"!offlineService.isOnline\">\n  <table class=\"table mb-0\">\n    <tr>\n      <td class=\"table-success text-center\">Added Offline</td>\n      <td class=\"table-warning text-center\">Changed Offline</td>\n      <td class=\"table-danger text-center\">Deleted Offline</td>\n    </tr>\n  </table>\n</div>\n<div class=\"formio-grid\">\n  <formio-alerts [alerts]=\"alerts\"></formio-alerts>\n  <table class=\"table table-bordered table-striped table-hover\">\n    <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"header.template\"></ng-container>\n    <formio-loader></formio-loader>\n    <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"body.template\"></ng-container>\n    <ng-container *ngIf=\"initialized\" [ngTemplateOutlet]=\"footer.template\"></ng-container>\n  </table>\n</div>\n<button *ngIf=\"!offlineService.isOnline\" class=\"btn btn-light\" type=\"button\" (click)=\"clearOfflineSubmissions()\">\n  <i class=\"fa fa-trash mr-3\"></i> Clear Offline Submissions\n</button>\n","import { Component, ComponentFactoryResolver, ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport { FormioLoader, FormioAlerts } from 'angular-formio';\nimport { FormioGridComponent, SubmissionGridFooterComponent, SubmissionGridHeaderComponent } from 'angular-formio/grid';\nimport { OfflineSubmissionGridBodyComponent } from './body/body.component';\nimport { OfflineService } from '../../../offline/offline.service';\n\n@Component({\n  selector: 'offline-submission-grid',\n  templateUrl: './submission-grid.component.html'\n})\nexport class OfflineSubmissionGridComponent extends FormioGridComponent {\n  constructor(\n    public loader: FormioLoader,\n    public alerts: FormioAlerts,\n    private _resolver: ComponentFactoryResolver,\n    private _ref: ChangeDetectorRef,\n    public offlineService: OfflineService,\n  ) {\n    super(loader, alerts, _resolver, _ref);\n    this.refresh = new EventEmitter();\n    this.offlineService.onlineChange.subscribe((online) => {\n      this._ref.detectChanges();\n      this.refresh.emit({});\n    });\n    this.components = {\n      header: SubmissionGridHeaderComponent,\n      body: OfflineSubmissionGridBodyComponent,\n      footer: SubmissionGridFooterComponent\n    };\n  }\n\n  clearOfflineSubmissions() {\n    if (window.confirm('This will clear the offline submission cache. Are you sure?')) {\n      this.offlineService.clearOfflineSubmissions().then(() => this.refresh.emit({}));\n    }\n  }\n}\n","<offline-submission-grid\n  [src]=\"gridSrc\"\n  [query]=\"gridQuery\"\n  [onForm]=\"service.formLoaded\"\n  (rowSelect)=\"onSelect($event)\"\n  (error)=\"service.onError($event)\"\n  (createItem)=\"onCreateItem()\"\n  createText=\"\"\n></offline-submission-grid>\n","import { Component } from '@angular/core';\nimport { FormioResourceIndexComponent } from 'angular-formio/resource';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html'\n})\nexport class SubmissionIndexComponent extends FormioResourceIndexComponent {}\n","<a *ngIf=\"downloadUrl\" [href]=\"downloadUrl\" target=\"_blank\" class=\"pull-right\"><img src=\"assets/pdf.png\" style=\"height: 2em;\" /></a>\n<ul class=\"nav nav-tabs mb-2\">\n  <li class=\"nav-item\"><a class=\"nav-link\" *ngIf=\"!auth.authenticated\" routerLink=\"../../\"><i class=\"fa fa-chevron-left glyphicon glyphicon-chevron-left\"></i></a></li>\n  <li class=\"nav-item\"><a class=\"nav-link\" *ngIf=\"auth.authenticated\" routerLink=\"../\"><i class=\"fa fa-chevron-left glyphicon glyphicon-chevron-left\"></i></a></li>\n  <li class=\"nav-item\" routerLinkActive=\"active\"><a class=\"nav-link\" routerLink=\"view\" routerLinkActive=\"active\">View</a></li>\n  <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"!offlineService.isOnline || perms.edit\"><a class=\"nav-link\" routerLink=\"edit\" routerLinkActive=\"active\">Edit</a></li>\n  <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"!offlineService.isOnline || perms.delete\"><a class=\"nav-link\" routerLink=\"delete\" routerLinkActive=\"active\"><span class=\"fa fa-trash glyphicon glyphicon-trash\"></span></a></li>\n</ul>\n<router-outlet></router-outlet>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormioAuthService } from 'angular-formio/auth';\nimport { FormioResourceComponent, FormioResourceService } from 'angular-formio/resource';\nimport { SubmissionService } from '../SubmissionService';\nimport { OfflineService } from '../../../offline/offline.service';\n\n@Component({\n  selector: 'app-resource',\n  templateUrl: './resource.component.html',\n  styleUrls: ['./resource.component.scss']\n})\nexport class SubmissionResourceComponent extends FormioResourceComponent implements OnInit {\n  public downloadUrl: string;\n  constructor(\n    public service: FormioResourceService,\n    public route: ActivatedRoute,\n    public auth: FormioAuthService,\n    public changeDetectorRef: ChangeDetectorRef,\n    public router: Router,\n    public offlineService: OfflineService\n  ) {\n    super(service, route, auth, changeDetectorRef, router);\n  }\n\n  getDownloadPDF() {\n    (this.service as SubmissionService).onResource.subscribe(() => {\n      this.service.formio.getDownloadUrl().then((url) => {\n        this.downloadUrl = url;\n      });\n    });\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.getDownloadPDF();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormioModule } from 'angular-formio';\nimport {\n  FormioResource,\n  FormioResourceConfig,\n  FormioResourceService,\n  FormioResourceRoutes\n} from 'angular-formio/resource';\nimport { FormioGrid } from 'angular-formio/grid';\nimport { SubmissionService } from './SubmissionService';\nimport { SubmissionResourceConfig } from './SubmissionResourceConfig';\nimport { SubmissionIndexComponent } from './index/index.component';\nimport { SubmissionResourceComponent } from './resource/resource.component';\nimport { OfflineSubmissionGridComponent } from './grid/submission-grid.component';\nimport { OfflineSubmissionGridBodyComponent } from './grid/body/body.component';\n\n@NgModule({\n  declarations: [\n    SubmissionIndexComponent,\n    SubmissionResourceComponent,\n    OfflineSubmissionGridComponent,\n    OfflineSubmissionGridBodyComponent\n  ],\n  imports: [\n    CommonModule,\n    FormioModule,\n    FormioGrid,\n    FormioResource,\n    RouterModule.forChild(FormioResourceRoutes({\n      index: SubmissionIndexComponent,\n      resource: SubmissionResourceComponent\n    }))\n  ],\n  providers: [\n    {\n      provide: FormioResourceService,\n      useClass: SubmissionService\n    },\n    {\n      provide: FormioResourceConfig,\n      useClass: SubmissionResourceConfig\n    }\n  ],\n  entryComponents: [\n    OfflineSubmissionGridBodyComponent\n  ]\n})\nexport class SubmissionModule { }\n"],"sourceRoot":"webpack:///"}